// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/go-resty/resty/v2"
	"go-fiber-api/internal/core/config"
	apikey2 "go-fiber-api/internal/core/middleware/apikey"
	"go-fiber-api/internal/core/middleware/cache"
	"go-fiber-api/internal/core/storage/db"
	"go-fiber-api/internal/feature/apikey"
	"go-fiber-api/internal/feature/user"
	"go-fiber-api/internal/wrapper/logx"
	"go-fiber-api/internal/wrapper/redis"
)

// Injectors from wire.go:

func New(client *resty.Client) (*Application, error) {
	logX := logx.Provide()
	configuration := config.Provide(logX)
	dbClient := db.ProvideDB(configuration)
	repo := user.ProvideRepository(dbClient)
	service := user.ProvideService(repo)
	handler := user.ProvideHandler(service)
	redisClient, err := redis.ProvideClient(configuration)
	if err != nil {
		return nil, err
	}
	cacheMiddleware := cache.New(redisClient)
	repoRepo := apikey.ProvideRepository(dbClient)
	apikeyService := apikey.ProvideService(configuration, repoRepo)
	apikeyHandler := apikey.ProvideHandler(apikeyService)
	middleware := apikey2.Provide(configuration, apikeyService)
	application := Provide(configuration, logX, dbClient, handler, cacheMiddleware, apikeyHandler, middleware)
	return application, nil
}
